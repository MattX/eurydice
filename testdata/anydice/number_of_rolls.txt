function: number of rolls in S:s to reach L:n {
    C: 0
    T: 0
    loop IDX over {1..#S} {
        if T < L {
            T: T+(IDX@S)
            C: C+1
        }
    }
    if T < L {
        C: -1
    }
    result: C
}

output [number of rolls in d6 to reach 3]
output [number of rolls in 2d6 to reach 5]
output [number of rolls in 4d10 to reach 10]

set "position order" to "lowest first"

output [number of rolls in d6 to reach 3]
output [number of rolls in 2d6 to reach 5]
output [number of rolls in 4d10 to reach 10]

\\\ Result \\\

"output 1",0.333333333334,0.9428090415818275,-1,1
#,%
-1,33.3333333333
1,66.6666666667

"output 2",0.9444444444450001,0.9702360664770544,-1,2
#,%
-1,16.6666666667
1,55.5555555556
2,27.7777777778

"output 3",1.6818,0.6637384725929333,-1,4
#,%
-1,1.26
1,34.39
2,59.05
3,4.25
4,1.05

"output 4",0.333333333334,0.9428090415818275,-1,1
#,%
-1,33.3333333333
1,66.6666666667

"output 5",1.3888888888880002,1.1124991330286313,-1,2
#,%
-1,16.6666666667
1,11.1111111111
2,72.2222222222

"output 6",2.9314,0.7858078900087476,-1,4
#,%
-1,1.26
1,0.01
2,21.91
3,56.71
4,20.11
