MISS: 0
HIT: 1
CRITICALHIT: 2

function: attack ROLL:n vs DEFENSE:n {
 if ROLL = 1 { result: MISS }
 if ROLL = 20 {
  if ROLL + ATTACK >= DEFENSE { result: CRITICALHIT }
  result: HIT
 }
 if ROLL + ATTACK >= DEFENSE { result: HIT }
 result: MISS
}

function: damage for ATTACKS:s {
 D: 0
 loop A over {1..#ATTACKS} {
  if A@ATTACKS = CRITICALHIT { D: D + CRITICAL }
  else if A@ATTACKS = HIT { D: D + DAMAGE }
 }
 result: D + [extra damage for ATTACKS]
}

function: extra damage for ATTACKS:s{
 if [ATTACKS contains CRITICALHIT] { D: [maximum of QUARRY] }
 else if [ATTACKS contains HIT] { D: QUARRY }
 else { D: 0 }
 if ![ATTACKS contains MISS] {
  result: D + 4
 }
 result: D
}

function: twin strike {
 result: [damage for 2d[attack d20 vs DEFENSE]]
}

DEFENSE: d{12..22}
QUARRY: d6
ATTACK  : 6 + 2
DAMAGE  : d12 + 6
CRITICAL: 18
output [twin strike] named "Greatbow"

\\\ Result \\\

"Greatbow",20.17375000000502,12.60924836264439,0,46
#,%
0,16
8,0.611111111111
9,1.22222222222
10,1.83333333333
11,2.44444444444
12,3.05555555556
13,3.66666666667
14,3.66666666667
15,3.66666666667
16,3.66666666667
17,3.66666666667
18,3.66666666667
19,3.70167824074
20,3.16059027778
21,2.65451388889
22,2.18344907407
23,1.74739583333
24,5.34635416667
25,0.9453125
26,1.15538194444
27,1.36545138889
28,1.57552083333
29,1.78559027778
30,1.99565972222
31,2.13570601852
32,2.20572916667
33,2.20572916667
34,2.13570601852
35,2.45399305556
36,2.24392361111
37,2.03385416667
38,1.82378472222
39,1.61371527778
40,1.40364583333
41,1.19357638889
42,0.983506944444
43,0.808449074074
44,0.668402777778
45,0.563368055556
46,0.743344907407
